### Variables
#
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
set $term alacritty

for_window [app_id="^launcher$"] floating enable, sticky enable, resize set 30 ppt 60 ppt, border pixel 10
set $menu exec $term -o font.size=16 --class=launcher -e launcher.sh

# Gaps
for_window [app_id=".*"] border pixel 2
gaps inner 10
gaps horizontal 5
gaps vertical 5
#gaps bottom -10

#show no border around any window
default_border none
default_floating_border none
# Hide borders if there is only one child in a workspace or container
smart_gaps on
smart_borders no_gaps
hide_edge_borders --i3 smart_no_gaps
focus_follows_mouse yes

#these hide titlebar when in tabbed mode
font pango:monospace 0
titlebar_border_thickness 0
titlebar_padding 0

client.focused              #61AFEF #61AFEF #61AFEF #61AFEF #61AFEF

### Idle configuration
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.
# A note on the timeout commands below: it's a neat way to block the screen from locking or turning the monitors off, when we're watching video
 exec swayidle -d -w \
	timeout 300 'playerctl status | grep Playing || ~/.config/sway/blurry_swaylock.sh' \
	timeout 600 'playerctl status | grep Playing || swaymsg "output * dpms off"' \
	resume 'swaymsg "output * dpms on"' \
	before-sleep '~/.config/sway/blurry_swaylock.sh' \
	lock '~/.config/sway/blurry_swaylock.sh'

### Input configuration
input type:touchpad {
	dwt enabled
	tap enabled
	natural_scroll enabled
	middle_emulation enabled
}
#hide cursor after a certain time
seat * hide_cursor 8000
#or when typing
seat * hide_cursor when-typing enable

input type:keyboard {
	xkb_layout "se"
	xkb_options "caps:escape"
}


### Key bindings
#
# Basics:
#
	# Start a terminal
	bindsym $mod+Return exec $term
	#escape hatch when I muck up zsh :P
	bindsym $mod+ctrl+Return exec $term -e sh

	# Kill focused window
	bindsym $mod+q kill

	# Start your launcher
	bindsym $mod+space exec $menu

	# Drag floating windows by holding down $mod and left mouse button.
	# Resize them with right mouse button + $mod.
	# Despite the name, also works for non-floating windows.
	# Change normal to inverse to use left mouse button for resizing and right
	# mouse button for dragging.
	floating_modifier $mod normal

	# Reload the configuration file
	bindsym $mod+shift+r reload

	# Toggle visibility of waybar
	bindsym $mod+n exec pkill -SIGUSR1 '^waybar$'

	# Exit sway (logs you out of your Wayland session)
	bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

	bindsym ctrl+alt+l exec powermenu.sh

	#clipboard history
	bindsym $mod+e exec clipman pick --tool=wofi

	#password manager
	bindsym $mod+w exec wofipass.sh

	#fast way to execute scripts from my scripts directory
	bindsym $mod+Shift+Space exec $term -e browse_scripts.sh
#
# Moving around:
#
	# Move your focus around
	bindsym $mod+$left focus left
	bindsym $mod+$down focus down
	bindsym $mod+$up focus up
	bindsym $mod+$right focus right
	# Or use $mod+[up|down|left|right]
	bindsym $mod+Left focus left
	bindsym $mod+Down focus down
	bindsym $mod+Up focus up
	bindsym $mod+Right focus right

	# Move the focused window with the same, but add Shift
	bindsym $mod+Shift+$left move left
	bindsym $mod+Shift+$down move down
	bindsym $mod+Shift+$up move up
	bindsym $mod+Shift+$right move right
	# Ditto, with arrow keys
	bindsym $mod+Shift+Left move left
	bindsym $mod+Shift+Down move down
	bindsym $mod+Shift+Up move up
	bindsym $mod+Shift+Right move right

	#easy way to shift focus between windows on the same workspace
	bindsym $mod+tab exec swaymsg -t get_tree | ~/.config/sway/alttab same-workspace next 1> /dev/null
	bindsym $mod+shift+tab exec swaymsg swaymsg -t get_tree | ~/.config/sway/alttab same-workspace prev 1> /dev/null

	#easy way to shift focus between windows on the same monitor
	bindsym alt+tab exec swaymsg swaymsg -t get_tree | ~/.config/sway/alttab monitor-workspaces next 1> /dev/null
	bindsym alt+shift+tab exec swaymsg swaymsg -t get_tree | ~/.config/sway/alttab monitor-workspaces prev 1> /dev/null
#
# Workspaces:
#
	# Switch to workspace
	bindsym $mod+1 workspace number 1
	bindsym $mod+2 workspace number 2
	bindsym $mod+3 workspace number 3
	bindsym $mod+4 workspace number 4
	bindsym $mod+5 workspace number 5
	bindsym $mod+6 workspace number 6
	bindsym $mod+7 workspace number 7
	bindsym $mod+8 workspace number 8
	bindsym $mod+9 workspace number 9
	bindsym $mod+0 workspace number 10
	bindsym $mod+plus workspace number 11 #the workspace where the maximized windows live
	# Move focused container to workspace, and follow with focus
	bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
	bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
	bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
	bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
	bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
	bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
	bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
	bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8
	bindsym $mod+Shift+9 move container to workspace number 9; workspace number 9
	bindsym $mod+Shift+0 move container to workspace number 10; workspace number 10
	# Note: workspaces can have any name you want, not just numbers.
	# We just use 1-10 as the default.

	bindsym $mod+Control+Shift+Right move workspace to output right
	bindsym $mod+Control+Shift+Left move workspace to output left
	bindsym $mod+Control+Shift+Down move workspace to output down
	bindsym $mod+Control+Shift+Up move workspace to output up
#
# Layout stuff:
#
	# Make the current focus fullscreen
	bindsym $mod+f fullscreen

	# Toggle the current focus between tiling and floating mode
	bindsym $mod+s floating toggle
	# fullscreen like behavior with the statusbar also showing
	bindsym $mod+m exec ~/.config/sway/maximize.sh
	#Quite neat for watching a video whilst doing other things :)
	bindsym $mod+Shift+s floating toggle; sticky toggle; exec ~/.config/sway/sway_window_move.sh bottom-right

#
# Resizing containers:
#
mode "resize" {
	# left will shrink the containers width
	# right will grow the containers width
	# up will shrink the containers height
	# down will grow the containers height
	bindsym $left resize shrink width 10px
	bindsym $down resize grow height 10px
	bindsym $up resize shrink height 10px
	bindsym $right resize grow width 10px

	# Ditto, with arrow keys
	bindsym Left resize shrink width 10px
	bindsym Down resize grow height 10px
	bindsym Up resize shrink height 10px
	bindsym Right resize grow width 10px

	# Return to default mode
	bindsym Return mode "default"
	bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Special keys
#
	# Audio
	bindsym XF86AudioRaiseVolume exec audio.sh up
	bindsym XF86AudioLowerVolume exec audio.sh down
	bindsym XF86AudioMute exec audio.sh mute-toggle
	bindsym XF86AudioPlay exec audio.sh play-pause
	bindsym XF86AudioNext exec audio.sh next
	bindsym XF86AudioPrev exec audio.sh previous

	#Backlight
	bindsym XF86MonBrightnessUp exec brightness.sh up
	bindsym XF86MonBrightnessDown exec brightness.sh down

	#Print button
	bindsym Print exec ~/.config/sway/screenshot-wl.sh


exec_always ~/.config/sway/exec_always.sh

bar {
	swaybar_command waybar
	position bottom
}

set $gnome-schema org.gnome.desktop.interface

exec_always {
	gsettings set $gnome-schema gtk-theme 'Adapta-Nokto'
	gsettings set $gnome-schema icon-theme 'Papirus-Dark'
	gsettings set $gnome-schema cursor-theme 'Layan-white-cursors'
}

include /etc/sway/config.d/*

exec ~/.config/sway/startup.sh
